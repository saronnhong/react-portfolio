[
    {
        "id": 1,
        "question": "What is Scope?",
        "answer": "The current context of execution. The context in which values and expressions are visible, or can be referenced. If a variable or other expression is not in the current scope, then it is unavailable for use. Scopes can also be layered in a hierarchy, so that child scopes have access to parent scopes, but not vice versa.",
        "url": "https://developer.mozilla.org/en-US/docs/Glossary/Scope"
    },
    {
        "id": 2,
        "question": "What is Hoisting?",
        "answer": "A strict definition of hoisting suggests that variable and function declarations are physically moved to the top of your code, but this is not in fact what happens. Instead, the variable and function declarations are put into memory during the compile phase, but stay exactly where you typed them in your code. JavaScript only hoists declarations, not initializations. ",
        "url": "https://developer.mozilla.org/en-US/docs/Glossary/Hoisting"
    }
]